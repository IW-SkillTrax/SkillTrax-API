// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillTrax.Models;

namespace SkillTrax.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180718154431_RemovedManyToManys")]
    partial class RemovedManyToManys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkillTrax.Models.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CertCategoryId");

                    b.Property<string>("CertificationName")
                        .IsRequired();

                    b.HasKey("CertificationId");

                    b.HasIndex("CertCategoryId");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("SkillTrax.Models.CertificationCategory", b =>
                {
                    b.Property<int>("CertCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertCategoryName")
                        .IsRequired();

                    b.HasKey("CertCategoryId");

                    b.ToTable("CertificationCategory");
                });

            modelBuilder.Entity("SkillTrax.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdUniqueIdentifier");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("RoleTypeRoleId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RoleTypeRoleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("SkillTrax.Models.EmployeeCertification", b =>
                {
                    b.Property<int>("EmployeeCertificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CertificationId");

                    b.Property<int>("EmployeeId");

                    b.HasKey("EmployeeCertificationId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCertification");
                });

            modelBuilder.Entity("SkillTrax.Models.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeSkillId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("SkillId");

                    b.HasKey("EmployeeSkillId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkill");
                });

            modelBuilder.Entity("SkillTrax.Models.RoleType", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired();

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("SkillTrax.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillName")
                        .IsRequired();

                    b.Property<int?>("SkillTypeId");

                    b.Property<int?>("SolutionId");

                    b.HasKey("SkillId");

                    b.HasIndex("SkillTypeId");

                    b.HasIndex("SolutionId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("SkillTrax.Models.SkillType", b =>
                {
                    b.Property<int>("SkillTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillTypeName")
                        .IsRequired();

                    b.HasKey("SkillTypeId");

                    b.ToTable("SkillType");
                });

            modelBuilder.Entity("SkillTrax.Models.Solution", b =>
                {
                    b.Property<int>("SolutionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SolutionName")
                        .IsRequired();

                    b.HasKey("SolutionId");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("SkillTrax.Models.Certification", b =>
                {
                    b.HasOne("SkillTrax.Models.CertificationCategory", "CertCategory")
                        .WithMany("Certifications")
                        .HasForeignKey("CertCategoryId");
                });

            modelBuilder.Entity("SkillTrax.Models.Employee", b =>
                {
                    b.HasOne("SkillTrax.Models.RoleType", "RoleType")
                        .WithMany("Employees")
                        .HasForeignKey("RoleTypeRoleId");
                });

            modelBuilder.Entity("SkillTrax.Models.EmployeeCertification", b =>
                {
                    b.HasOne("SkillTrax.Models.Certification", "Certification")
                        .WithMany("EmployeeCertifications")
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkillTrax.Models.Employee", "Employee")
                        .WithMany("EmployeeCertifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillTrax.Models.EmployeeSkill", b =>
                {
                    b.HasOne("SkillTrax.Models.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkillTrax.Models.Skill", "Skill")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkillTrax.Models.Skill", b =>
                {
                    b.HasOne("SkillTrax.Models.SkillType", "SkillType")
                        .WithMany("Skills")
                        .HasForeignKey("SkillTypeId");

                    b.HasOne("SkillTrax.Models.Solution", "Solution")
                        .WithMany("Skills")
                        .HasForeignKey("SolutionId");
                });
#pragma warning restore 612, 618
        }
    }
}
